{"version":3,"sources":["Component/FetchNodeServices.js","Component/Checks.js","Component/Candidate.js","Component/DisplayCandidate.js","Component/Login.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","ServerURL","getData","url","a","fetch","response","json","result","postDataAndImage","formData","config","post","data","postData","body","method","mode","headers","JSON","stringify","isBlank","txt","length","useStyles","makeStyles","theme","root","display","justifyContent","alignItems","subdiv","padding","width","marginTop","background","input","formControl","margin","spacing","minWidth","Candidate","props","classes","useState","candidateFirstName","setCandidateFirstName","candidateLastName","setCandidateLastName","address","setAddress","candidateEmail","setCandidateEmail","candidatePhone","setCandidatePhone","password","setPassword","bytes","file","icon","setIcon","gender","setGender","handleClick","error","msg","swalhtml","renderHTML","FormData","append","swal","title","dangerMode","className","Grid","container","item","xs","style","fontSize","fontWeight","letterSpacing","sm","TextField","onChange","event","target","value","label","variant","fullWidth","files","URL","createObjectURL","handleIcon","accept","id","type","htmlFor","IconButton","color","component","Avatar","src","height","FormControl","InputLabel","Select","labelId","defaultValue","MenuItem","Button","onClick","appBar","position","marginLeft","flex","Transition","React","forwardRef","ref","Slide","direction","DisplayCandidate","list","setList","userId","setUserId","setCandidateName","iconSaveCancel","setIconSaveCancel","getRowData","setRowData","handleDelete","userid","firstname","lastname","email","phone","handleClickSaveIcon","editFormView","flexDirection","open","setOpen","handleClose","fetchUser","useEffect","columns","field","render","rowData","borderRadius","actions","tooltip","name","split","handleClickOpen","Dialog","fullScreen","onClose","TransitionComponent","AppBar","Toolbar","edge","Typography","autoFocus","Copyright","align","Link","href","Date","getFullYear","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","avatar","secondary","main","form","submit","Login","setMsg","history","push","pathname","CssBaseline","md","Paper","elevation","square","required","autoComplete","FormControlLabel","control","Checkbox","Box","mt","App","Props","strict","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92708beb.chunk.js","sourcesContent":["var axios=require(\"axios\")\r\nvar ServerURL=\"http://localhost:5000\"\r\n\r\nconst getData = async (url) => {\r\n    try {\r\n        const response = await fetch(`${ServerURL}/${url}`);\r\n        const result = await response.json();\r\n        return result;\r\n    }\r\n    catch (e){\r\n        return null;\r\n    }\r\n};\r\n\r\nconst postDataAndImage=async(url,formData,config)=>{\r\n\r\n    try{\r\n        var response= await axios.post( `${ServerURL}/${url}`,formData,config);\r\n        const result=response.data.result\r\n        return result\r\n    }\r\n    catch(e){\r\n        return null\r\n\r\n    }\r\n};\r\n\r\nconst postData = async (url, body)=> {\r\n    try{\r\n        const response = await fetch(`${ServerURL}/${url}`,{\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\"Content-Type\": \"application/json;charset=utf-8\"},\r\n            body: JSON.stringify(body),\r\n        })\r\n        const result = await response.json();\r\n        return result;\r\n    } \r\n    catch (e){\r\n        return null;\r\n    }\r\n\r\n};\r\n\r\nexport {postDataAndImage,ServerURL,getData,postData}","function isBlank(txt)\r\n{\r\n    if(txt.length==0)\r\n      return true\r\n    else\r\n        return false\r\n\r\n}\r\nexport{isBlank}","import React,{useEffect, useState} from \"react\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport swalhtml from \"@sweetalert/with-react\";\r\nimport swal from \"sweetalert\";\r\nimport {postData,getData, postDataAndImage} from \"./FetchNodeServices\";\r\nimport{isBlank} from \"./Checks\"\r\nimport renderHTML from \"react-render-html\";\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Avatar from '@material-ui/core/Avatar'; \r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\n \r\nconst useStyles = makeStyles((theme) =>({\r\n root:{\r\n     display:'flex',\r\n     justifyContent:'center',\r\n     alignItems:'center'\r\n },\r\n subdiv:{\r\n     padding:20,\r\n     width:700,\r\n     marginTop:20,\r\n     background:'#FFF'\r\n    \r\n },\r\n input: {\r\n    display: 'none',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 690,\r\n  },\r\n}));\r\nexport default function Candidate(props)\r\n{\r\n    const classes = useStyles();\r\n    \r\n    const [candidateFirstName,setCandidateFirstName]=useState('');\r\n    const [candidateLastName,setCandidateLastName]=useState('');\r\n    const [address,setAddress]=useState('');\r\n    const [candidateEmail,setCandidateEmail]=useState('');\r\n    const [candidatePhone,setCandidatePhone]=useState('');\r\n    const [password,setPassword]=useState('');\r\n    const [icon,setIcon]=useState({bytes:'',file:'/noimage.webp'});\r\n    const [gender,setGender]=useState('')\r\n\r\n    const handleIcon=(event)=>{\r\n        setIcon({bytes:event.target.files[0],\r\n           file:URL.createObjectURL(event.target.files[0])})\r\n          }\r\n    \r\n\r\n  const handleClick=async()=>{\r\n      var error=false\r\n      var msg=\"<div>\"\r\n      if(isBlank(candidateFirstName))\r\n      {error=true\r\n        msg+=\"<font color='#e74c3c'><b>Candidate FirstName should not be blank</b></font><br>\"\r\n      }\r\n      if(isBlank(candidateLastName))\r\n      {error=true\r\n        msg+=\"<font color='#e74c3c'><b>Candidate LastName should not be blank</b></font><br>\"\r\n      }\r\n      if(isBlank(address))\r\n      {error=true\r\n        msg+=\"<font color='#e74c3c'><b>Address should not be blank</b></font><br>\"\r\n      }\r\n      if(isBlank(candidateEmail))\r\n      {error=true\r\n        msg+=\"<font color='#e74c3c'><b>Candidate Email should not be blank</b></font><br>\"\r\n      }\r\n      if(isBlank(candidatePhone))\r\n      {error=true\r\n        msg+=\"<font color='#e74c3c'><b>Candidate Phone should not be blank</b></font><br>\"\r\n      }\r\n      if(isBlank(icon.bytes))\r\n      {error=true\r\n        msg+=\"<font color='#e74c3c'><b>Please select category icon..</b></font><br>\"\r\n      }\r\n      \r\n       msg+=\"</div>\"\r\n      if(error)\r\n      {\r\n          swalhtml(renderHTML(msg))\r\n      }\r\n     else\r\n     {\r\n      var formData=new FormData()\r\n      formData.append(\"firstname\",candidateFirstName)\r\n      formData.append(\"lastname\",candidateLastName)\r\n      formData.append(\"address\",address)\r\n      formData.append(\"email\",candidateEmail)\r\n      formData.append(\"phone\",candidatePhone)\r\n      formData.append(\"icon\",icon.bytes)\r\n      formData.append(\"password\",password)\r\n      formData.append(\"gender\",gender)\r\n      \r\n      var config = {headers:{\"content-type\":\"multipart/form-data\"}}\r\n      var result=await postDataAndImage('candidate/addnewcandidate',formData,config)\r\n    if(result)\r\n    {\r\n        swal({\r\n            title: \"Candidate Submitted Successfully \",\r\n            icon: \"success\",\r\n            dangerMode: true,\r\n          })\r\n    }\r\n    }\r\n    }\r\n\r\n    return(<div className={classes.root}>\r\n        <div className={classes.subdiv}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                    <div style={{fontSize:22,fontWeight:700, letterSpacing:2, padding:20}}>\r\n                        Candidate Interface\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField onChange={(event)=>setCandidateFirstName(event.target.value)} label=\"First Name\" variant=\"outlined\" fullWidth/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField onChange={(event)=>setCandidateLastName(event.target.value)} label=\"Last Name\" variant=\"outlined\" fullWidth/>\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <TextField onChange={(event)=>setAddress(event.target.value)} label=\"Address\" variant=\"outlined\" fullWidth/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField onChange={(event)=>setCandidateEmail(event.target.value)} label=\"Email\" variant=\"outlined\" fullWidth/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField onChange={(event)=>setCandidatePhone(event.target.value)} label=\"Phone\" variant=\"outlined\" fullWidth/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <span style={{fontSize:16,fontWeight:300}}>Upload Category Icon</span>\r\n                    <input  onChange={(event)=>handleIcon (event)}accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n                    <label htmlFor=\"icon-button-file\">\r\n                      <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                      <PhotoCamera />\r\n                      </IconButton>\r\n                    </label>\r\n                </Grid>\r\n                    <Grid item xs={12} sm={6} style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                       <Avatar variant=\"rounded\" src={icon.file} style={{width:50,height:50}}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField onChange={(event)=>setPassword(event.target.value)} label=\"Password\" variant=\"outlined\" fullWidth/>\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                <FormControl variant=\"outlined\" fullWidth >\r\n                       <InputLabel id=\"demo-simple-select-outlined-label\" >Gender</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            //value={age}\r\n                            onChange={(event)=>setGender(event.target.value)}\r\n                            label=\"Status\" defaultValue=\"Male\">\r\n                            <MenuItem value={'Female'}>Female</MenuItem>\r\n                            <MenuItem value={'Male'}>Male</MenuItem>  \r\n                        </Select>\r\n                    </FormControl>\r\n                    </Grid>\r\n                \r\n                    <Grid item xs={12}  style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                        <Button onClick={()=>handleClick()}fullWidth variant=\"contained\" color=\"primary\">Save</Button>\r\n                    </Grid>\r\n            </Grid> \r\n        </div>\r\n    </div>)\r\n}","import MaterialTable from \"material-table\"\r\nimport React,{useState,useEffect} from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Avatar from '@material-ui/core/Avatar'; \r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport {ServerURL,postDataAndImage,getData,postData} from \"./FetchNodeServices\"\r\nimport swalhtml from \"@sweetalert/with-react\"\r\nimport swal from \"sweetalert\"\r\nimport { isBlank } from \"./Checks\"\r\nimport renderHTML from \"react-render-html\"\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n//import state from \"sweetalert/typings/modules/state\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  root:{\r\n    display:'flex',\r\n    justifyContent:'center',\r\n    alignItems:'center'\r\n    \r\n    },\r\n    subdiv:{\r\n       padding:20,\r\n       width:900,\r\n       marginTop:20,\r\n       background:'#f1f2f6'\r\n       },\r\n     input: {\r\n    display: 'none',\r\n  },\r\nformControl: {\r\n    minWidth: 690,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nexport default function DisplayCandidate(props)\r\n{ const[list,setList]=useState()\r\n  const classes = useStyles();\r\n  //////////////////////////Edit Form//////////////////////////////\r\n  \r\n  const [userId,setUserId]=useState('')\r\n  const [candidateName,setCandidateName]=useState('');\r\n \r\n//   var firstname=name[0];\r\n//   var lastname=name[1];\r\n  const [candidateFirstName,setCandidateFirstName]=useState('');\r\n  const [candidateLastName,setCandidateLastName]=useState('');\r\n  const [address,setAddress]=useState('');\r\n  const [candidateEmail,setCandidateEmail]=useState('');\r\n  const [candidatePhone,setCandidatePhone]=useState('');\r\n  const [icon,setIcon]=useState({bytes:'',file:'/noimage.webp'});\r\n  const [password,setPassword]=useState('');\r\n  const [gender,setGender]=useState('');\r\n  const [iconSaveCancel,setIconSaveCancel]=useState(false);  \r\n  const [getRowData,setRowData]=useState([])\r\n\r\n\r\n  const handleIcon=(event)=>{\r\n    setIcon({bytes:event.target.files[0],\r\n       file:URL.createObjectURL(event.target.files[0])})\r\n       setIconSaveCancel(true)\r\n      }\r\n      \r\n \r\n  const handleDelete=async()=>{\r\n    var body={userid:userId}\r\n  var result=await postData(\"candidate/deleteuser\",body)\r\n  if(result)\r\n  {\r\n   swal({\r\n     title: \"user Deleted Successfully\",\r\n     icon: \"success\",\r\n     dangerMode: true,\r\n   })\r\n  }\r\nelse\r\n{\r\n swal({\r\n   title: \"Fail to Deleted User\",\r\n   icon: \"success\",\r\n   dangerMode: true,\r\n })\r\n}\r\n  }\r\n  const handleClick=async()=>{\r\n    var error=false\r\n        var msg=\"<div>\"\r\n        if(isBlank(candidateFirstName))\r\n        {error=true\r\n        msg+=\"<font color='#b2bec3'><b>Candidate FirstName must be filled</b></font><br>\";\r\n        }\r\n        if(isBlank(candidateLastName))\r\n        {error=true\r\n        msg+=\"<font color='#b2bec3'><b>Candidate LastName must be filled</b></font><br>\";\r\n        }\r\n        if(isBlank(address))\r\n        {error=true\r\n        msg+=\"<font color='#b2bec3'><b>Address must be filled</b></font><br>\";\r\n        }\r\n        if(isBlank(candidateEmail))\r\n        {error=true\r\n        msg+=\"<font color='#b2bec3'><b>CandidateEmail must be filled</b></font><br>\";\r\n        }\r\n        if(isBlank(candidatePhone))\r\n        {error=true\r\n          msg+=\"<font color='#b2bec3'><b>Pls fill the phoneno.</b></font><br>\";\r\n        }\r\n        if(isBlank(password))\r\n        {error=true\r\n          msg+=\"<font color='#b2bec3'><b>Pls fill the password</b></font><br>\";\r\n        }\r\n        if(isBlank(gender))\r\n        {error=true\r\n          msg+=\"<font color='#b2bec3'><b>Pls fill the Gender</b></font><br>\";\r\n        }\r\n        msg+=\"</div>\"\r\n        if(error)\r\n        {\r\n         swalhtml(renderHTML(msg))\r\n        }\r\n\r\n    else\r\n    {\r\n   var body={userid:userId,\r\n           firstname:candidateFirstName,\r\n           lastname:candidateLastName,\r\n           address:address,\r\n           email:candidateEmail,\r\n           phone:candidatePhone,\r\n           password:password,\r\n           gender:gender\r\n           \r\n\r\n    }\r\n   \r\n   var result=await postData('candidate/edituser',body)\r\n   if(result)\r\n   {\r\n    swal({\r\n      title: \"candidate Updated Successfully\",\r\n      icon: \"success\",\r\n      dangerMode: true,\r\n    })\r\n   }\r\n  }\r\n }\r\n\r\n const handleCancelIcon=()=>\r\n   {\r\n     setIconSaveCancel(false)\r\n     setIcon({bytes:\"\",file:`${ServerURL}/images/${getRowData.icon}`})\r\n   }\r\n\r\n   const handleClickSaveIcon=async()=>{\r\n    var formData=new FormData()\r\n    formData.append(\"userid\",userId)\r\n    formData.append(\"icon\",icon.bytes)\r\n    var config = {headers:{\"content-type\":\"multipart/form-data\"}}\r\n    var result=await postDataAndImage('candidate/editicon',formData,config)\r\n  if(result)\r\n  {\r\n      swal({\r\n          title: \"Icon Updated Successfully \",\r\n          icon: \"success\",\r\n          dangerMode: true,\r\n        })\r\n        setIconSaveCancel(false)\r\n  }\r\n  }\r\n  \r\n \r\n const editFormView=()=>{\r\n    return(<div className={classes.root}>\r\n        <div className={classes.subdiv}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                    <div style={{fontSize:22,fontWeight:700, letterSpacing:2, padding:20}}>\r\n                        Candidate\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField value={candidateFirstName} onChange={(event)=>setCandidateFirstName(event.target.value)} label=\"First Name\" variant=\"outlined\" fullWidth/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField value={candidateLastName} onChange={(event)=>setCandidateLastName(event.target.value)} label=\"Last Name\" variant=\"outlined\" fullWidth/>\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <TextField value={address} onChange={(event)=>setAddress(event.target.value)} label=\"Address\" variant=\"outlined\" fullWidth/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField value={candidateEmail} onChange={(event)=>setCandidateEmail(event.target.value)} label=\"Email\" variant=\"outlined\" fullWidth/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField value={candidatePhone} onChange={(event)=>setCandidatePhone(event.target.value)} label=\"Phone\" variant=\"outlined\" fullWidth/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <span style={{fontSize:16,fontWeight:300}}> Edit Category Icon</span> \r\n                  <input  onChange={(event)=>handleIcon (event)}accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n                  <label htmlFor=\"icon-button-file\">\r\n                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                    <PhotoCamera />\r\n                    </IconButton>\r\n                  </label>\r\n              </Grid>\r\n                  <Grid item xs={12} sm={6} style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                     <Avatar variant=\"rounded\" src={icon.file} style={{width:50,height:50}}/>\r\n                 \r\n                     {iconSaveCancel?<span><Button onClick={()=>handleClickSaveIcon()} color=\"secondary\">Save</Button><Button color=\"secondary\" onClick={()=>handleCancelIcon()}>Cancel</Button></span>:<></>}\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField value={password} onChange={(event)=>setPassword(event.target.value)} label=\"Password\" variant=\"outlined\" fullWidth/>\r\n                </Grid>\r\n              \r\n                <Grid item xs={12} >\r\n                <FormControl variant=\"outlined\" fullWidth >\r\n                       <InputLabel id=\"demo-simple-select-outlined-label\" >Gender</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={gender}\r\n                            onChange={(event)=>setGender(event.target.value)}\r\n                            label=\"Gender\" defaultValue=\"pending\">\r\n                            <MenuItem value={'Female'}>Female</MenuItem>\r\n                            <MenuItem value={'Male'}>Male</MenuItem>  \r\n                        </Select>\r\n                    </FormControl>\r\n                    </Grid>\r\n                \r\n            </Grid> \r\n        </div>\r\n    </div>)\r\n }\r\n\r\n\r\n\r\n\r\n  ////////////////////////////////////////////////////////////////////\r\n///////////////////////////Edit Dialog ///////////////////////////////\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = (rowData) => {\r\n    setRowData(rowData)\r\n    setOpen(true);\r\n    setUserId(rowData.userid)\r\n    setCandidateName(rowData.name)\r\n    var name = rowData.name.split(\" \");\r\n    setCandidateFirstName(name[0])\r\n    setCandidateLastName(name[1])\r\n    setAddress(rowData.address)\r\n    setCandidateEmail(rowData.email)\r\n    setCandidatePhone(rowData.phone)\r\n    setIcon({bytes:\"\",file:`${ServerURL}/images/${rowData.icon}`})\r\n    setPassword(rowData.password)\r\n    setGender(rowData.gender)\r\n    \r\n    \r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    fetchUser()\r\n  };\r\n\r\n  const showEditdialog=()=>{\r\n    return (\r\n      <div>\r\n        \r\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n          <AppBar className={classes.appBar}>\r\n            <Toolbar>\r\n              <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Edit/Delete User\r\n              </Typography>\r\n              <Button autoFocus color=\"inherit\" onClick={handleClick}>\r\n                Update\r\n              </Button>\r\n              <Button autoFocus color=\"inherit\" onClick={handleDelete}>\r\n                Delete\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          {editFormView()}\r\n        </Dialog>\r\n      </div>\r\n    );\r\n\r\n  }\r\n  ///////////////////////////////////////////////////////////////////\r\nconst fetchUser=async()=>{\r\nvar result=await getData(\"candidate/displayall\")\r\nsetList(result)\r\n\r\n}\r\nuseEffect(function(){\r\n    fetchUser()\r\n\r\n},[])\r\n\r\n\r\nfunction displayall() {\r\n    return (\r\n      <div>\r\n      <MaterialTable\r\n        title=\"Pending Task\"\r\n        columns={[\r\n         { title: 'Id', field: 'userid' },\r\n          { title: 'Name', field: 'name' },\r\n          { title: 'Address', field: 'address' },\r\n          { title: 'Email', field: 'email' },\r\n          { title: 'Phone', field: 'phone' },\r\n          { title: 'Icon', field: 'icon',\r\n            render: rowData =><div><img src={`${ServerURL}/images/${rowData.icon}`} style={{borderRadius:5}} width='50' height='50'></img></div> },\r\n          { title: 'Password', field: 'password' },\r\n          { title: 'Gender', field: 'gender' },\r\n          \r\n        ]}\r\n        data={list}       \r\n        actions={[\r\n          {\r\n            icon: 'editoutlined',\r\n            tooltip: 'Edit Task',\r\n            onClick: (event, rowData) =>handleClickOpen(rowData)\r\n          },\r\n        ]}\r\n      />\r\n      {showEditdialog()}\r\n      </div>\r\n    )\r\n  }\r\n  return( <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n<div style={{width:1200,marginTop:90,padding:3}}>\r\n{displayall()}\r\n</div>\r\n\r\n  </div>\r\n  )\r\n  \r\n}","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {getData, postData} from \"./FetchNodeServices\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"http://www.numericinfosystems.in\">\r\n         Pvt Ltd\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    \r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login(props) {\r\n  const classes = useStyles();\r\n  const [candidateEmail,setCandidateEmail]=useState(\"\")\r\n  const [password,setPassword]=useState(\"\")\r\n  const [msg,setMsg]=useState(\"\")\r\n\r\n  const handleClick = async () => {\r\n    var body = { email: candidateEmail, password: password };\r\n    var result = await postData(\"admin/chkadminlogin\", body);\r\n    if (result.result)\r\n   {\r\n    props.history.push({ pathname: '/addcandidate' })\r\n   }\r\n   else{\r\n     setMsg(\"Invalid AdminId/Password....\")\r\n   }\r\n\r\n  };\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Candidate Login\r\n          </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(event)=>setCandidateEmail(event.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(event)=>setPassword(event.target.value)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={() => handleClick()}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <div style={{fontWeight:600,color:'red'}}>\r\n              {msg}\r\n            </div>\r\n\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import {BrowserRouter as Router,Route} from \"react-router-dom\"\nimport Candidate from \"./Component/Candidate\"\nimport DisplayCandidate from \"./Component/DisplayCandidate\"\nimport Login from \"./Component/Login\"\n\nfunction App(Props) {\n  return (\n    <div>\n      <Router>\n      <Route\n        strict\n        exact\n        component={Candidate}\n        path=\"/addcandidate\"\n        history={Props.history}\n      ></Route>\n       <Route\n        strict\n        exact\n        component={DisplayCandidate}\n        path=\"/displaycandidate\"\n        history={Props.history}\n      ></Route>\n       <Route\n        strict\n        exact\n        component={Login}\n        path=\"/login\"\n        history={Props.history}\n      ></Route>\n      \n      </Router>\n    </div>\n  );\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}